name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%h)")
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🚀 What's New in ${{ steps.version.outputs.VERSION }}
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## 📦 Installation
          
          ### Docker (Recommended)
          ```bash
          git clone https://github.com/osamusic/cyber-meddev-agents.git
          cd cyber-meddev-agents
          git checkout ${{ steps.version.outputs.VERSION }}
          docker-compose up --build
          ```
          
          ### Manual Installation
          See [README.md](https://github.com/osamusic/cyber-meddev-agents#setup) for detailed setup instructions.
          
          ## 🔍 Full Changelog
          **Full Changelog**: https://github.com/osamusic/cyber-meddev-agents/compare/${{ steps.changelog.outputs.LAST_TAG || 'v0.0.0' }}...${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'rc') || contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}
        generate_release_notes: true

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        text: |
          🎉 New release available: ${{ steps.version.outputs.VERSION }}
          
          Repository: ${{ github.repository }}
          Release Notes: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Notify Email
      uses: dawidd6/action-send-mail@v3
      if: always()
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port: ${{ secrets.SMTP_PORT }}
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "🚀 MedShield AI Release ${{ steps.version.outputs.VERSION }}"
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.SMTP_FROM }}
        body: |
          A new version of MedShield AI has been released!
          
          Version: ${{ steps.version.outputs.VERSION }}
          Release Date: ${{ github.event.head_commit.timestamp }}
          
          View the release: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}
          
          Best regards,
          MedShield AI Development Team